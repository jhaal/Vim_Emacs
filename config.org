* Settings start here onwards
** Set column width to 80 columns, highlight characters after that limit
#+BEGIN_SRC emacs-lisp
(require 'whitespace)
(setq whitespace-line-column 80) ;; limit line length
(setq whitespace-style '(face empty-tabs lines-tail))
(global-whitespace-mode t)
#+END_SRC
** Blank scratch pad and start emacs in text mode by default
#+BEGIN_SRC emacs-lisp
(setq initial-scratch-message "")
(setq initial-major-mode 'text-mode)
(add-hook 'text-mode-hook 'turn-on-auto-fill)
#+END_SRC
** Always kill current buffer
#+BEGIN_SRC emacs-lisp
(defun kill-curr-buffer ()
(interactive)
(kill-buffer (current-buffer)))
(global-set-key (kbd "C-x k") 'kill-curr-buffer)
#+END_SRC
** Kill all buffers with C-M-super-k
#+BEGIN_SRC emacs-lisp
(defun kill-all-buffers()
(interactive)
(mapc 'kill-buffer (buffer-list)))
(global-set-key (kbd "C-M-s-k") 'kill-all-buffers)
#+END_SRC
** Kill whole word backwards as well as foreards with C-c ww
#+BEGIN_SRC emacs-lisp
(defun kill-whole-word ()
 (interactive)
 (backward-word)
 (kill-word 1))
(global-set-key (kbd "C-c w w") 'kill-whole-word)
;; subword-mode
(global-subword-mode 1)
#+END_SRC
** Disable hippie-exapnd warnings
#+BEGIN_SRC emacs-lisp
(setq ad-redefinition-action 'accept)
#+END_SRC
** Make typing select and delete/overwrite selected text
#+BEGIN_SRC emacs-lisp
(delete-selection-mode 1)
#+END_SRC
** Turn on highlighting current line and use pretty symbols for words
#+BEGIN_SRC emacs-lisp
(when window-system (global-hl-line-mode t))
(when window-system (global-prettify-symbols-mode t))
#+END_SRC
** Autosave files in /tmp/autosaves and don't create lock files
**** url-github.com/kshenoy/dotfiles/blob/master/emacs.d/config.org
#+BEGIN_SRC emacs-lisp
;;(setq auto-save-default nil)
(defvar autosave-directory (concat user-emacs-directory "/tmp/autosave"))
(if (not (file-exists-p autosave-directory)) (make-directory autosave-directory t))
(setq create-lockfiles nil)
;; (setq auto-save-file-name-transforms `(("." ,autosave-directory t)))
(setq auto-save-default t)  ; auto-save every buffer that visits a file
(setq history-delete-duplicates t)
#+END_SRC
** Inhibit splash screen and create backup files
**** url-github.com/kshenoy/dotfiles/blob/master/emacs.d/config.org
#+BEGIN_SRC emacs-lisp
(setq inhibit-splash-screen t)
;;(setq make-backup-files nil)
(defvar backup-directory (concat user-emacs-directory "/tmp/backups"))
(if (not (file-exists-p backup-directory)) (make-directory backup-directory t))
(setq backup-directory-alist `(("." . ,backup-directory)))
(setq make-backup-files         t)  ; backup of a file the first time it is saved.
(setq backup-by-copying         t)  ; don't clobber symlinks
(setq version-control           t)  ; version numbers for backup files
(setq delete-old-versions       t)  ; delete excess backup files silently
(setq delete-by-moving-to-trash t)
(setq kept-old-versions         2)  ; oldest versions to keep when a new numbered backup is made (default: 2)
(setq kept-new-versions         2)  ; newest versions to keep when a new numbered backup is made (default: 2)
#+END_SRC
** Line numbering utility
#+BEGIN_SRC emacs-lisp
(global-linum-mode t)
#+END_SRC
** Display time in modeline
#+BEGIN_SRC emacs-lisp
(display-time-mode 1)
#+END_SRC
** Auto-complete brackets and quotes
#+BEGIN_SRC emacs-lisp
(setq electric-pair-pairs '(
			    (?\( . ?\))
			    (?\{ . ?\})
			    (?\[ . ?\])
                            (?\" . ?\")
			    ))
(electric-pair-mode t)
#+END_SRC
** No blinking cursor, wrap long lines by arrow
#+BEGIN_SRC emacs-lisp
(global-visual-line-mode 1)
(blink-cursor-mode 0)
#+END_SRC
** Make emacs remember cursor position
#+BEGIN_SRC emacs-lisp
(save-place-mode 1)
(desktop-save-mode 1)
#+END_SRC
** Language settings 
#+BEGIN_SRC emacs-lisp
(set-language-environment    "UTF-8")
(set-default-coding-systems  'utf-8)
(setq locale-coding-system   'utf-8)
(set-terminal-coding-system  'utf-8)
(set-keyboard-coding-system  'utf-8)
(set-selection-coding-system 'utf-8)
(prefer-coding-system        'utf-8)
#+END_SRC
** Set new buffer open in new pop-up tab(Optional)
#+BEGIN_SRC emacs-lisp
;;(setq pop-up-frames t)
#+END_SRC
** CUA mode to enave C-x,C-c,C-v
#+BEGIN_SRC emacs-lisp
(cua-mode 1)
#+END_SRC
** Abbreviation & Expansion
**** pp-78
#+BEGIN_SRC emacs-lisp
(setq-default abbrev-mode t)
(read-abbrev-file "~/.emacs.d/.abbrev_defs")
(setq save-abbrevs t)
#+END_SRC
** Disable toolbar and menubar
#+BEGIN_SRC emacs-lisp
(menu-bar-mode -1)
(tool-bar-mode -1)
#+END_SRC
** Set tab width to 4-columns & no tab but space for C-r/N-l
#+BEGIN_SRC emacs-lisp
(setq-default tab-width 4)
(setq-default indent-tabs-mode nil)
#+END_SRC
** Custom compile commands
**** C code
;;#+BEGIN_SRC emacs-lisp
;;(c-mode . "icc -Wall -o %n %f")
;;#+END_SRC
**** C++ code
;;#+BEGIN_SRC emacs-lisp
;;(c++-mode . "icpc -O2 -Wall -o %n %f")
;;#+END_SRC
** Links to websites that I have used to build this setup
*** https://github.com/makuto/editorPreferences/blob/master/Emacs/emacsConfig.txt
*** https://www.youtube.com/watch?v=HTUE03LnaXA
*** https://www.emacswiki.org/emacs/SmoothScrolling
*** https://www.emacswiki.org/emacs/AutoInsertMode
*** http://ergoemacs.org/emacs/emacs_make_modern.html
*** https://www.gnu.org/software/auctex/manual/reftex.html#Installation
*** https://www.emacswiki.org/emacs/YesOrNoP
